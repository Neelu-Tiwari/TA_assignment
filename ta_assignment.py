# -*- coding: utf-8 -*-
"""TA Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lThMn8aNNLDXY_rRHm8_B4kRb0uaEiRk
"""

#ASCII value of A
asciiVal = 65

#outer for loop to print no. of rows in the pattern
for i in range (0,5):

  #inner loop to increment the ASCII value by 1
  for j in range(0, i+1):

    #coverting the ASCII value into character using chr()function
    alpha = chr(asciiVal)

    #printing the alphabates
    print(alpha, end=" ")

    #incrementing the ASCII value by 1
    asciiVal+= 1

  # print pattern
  print()



#no. of rows in the pattern
rows = 5

#outer for loop to incremnet rows by 1
for i in range(1, rows+1):  #rows+1 beause in python one less than gien value

  #inner for loop to print spaces in the pattern
  # so that it can be left align or reverse pattern
  for j in range(1, (rows - i)+1): #here we have added one to balance the 5 rows as it takes 1 less than the given value

    #print the spaces
    print(" ", end=" ")

  #another inner for loop to increment the * symbol by 1
  for k in range (1, i+1):

    # print he * symbol
    print("*", end=" ")

  #print function
  print()

#using while loop to check budget value
# This loop will go on until the budget is integer or float 
while True: 

  # to catch eceptions of budget value
	try: 
		budget = float(input("Enter your budget : ")) # if budget is integer or float it will be stored 
		# temporarily in variable 's' 
		s = budget 
    
    # if value is invalid
    #then show value error
	except ValueError: 
		print("Give a valid amount")
		continue
    #after giving error again control will go at the start of the loop 

  #if no error then eit loop
	else: 
		break

#creating a dictionary to store name, quantity and price values
#initially all the lists in a dictionary are empty
items ={"Product Name":[], "Quantity":[], "Price":[]} 

#converting dictionary into list for further updation 
b = list(items.values()) 

#variable name value of "name" from dictionary 'items' 
name = b[0] 

# variable qu value of "quant" from dictionary 'items' 
quantity = b[1] 

# variable pr value of "price" from dictionary 'items' 
price = b[2] 




# This loop terminates when user select 2.EXIT option when asked 
while True: 
  
  #try will ask user for an option as an integer (1 or 2) 
	try: 
		option = int(input("1.Add an item\n2.Exit\nEnter your choice : ")) 
  
  #if correct then procceed to else statement continue asking options otherwise gives error
	except ValueError: 
		print("\nERROR: Choose a valid option 1 or 2") 
		continue
	else: 

		#checking the budget is greater than zero and option selected 
		#by user is 1 i.e. to add an item or 2 i.e. to exit
		if option == 1 and s > 0:	 #s is the temporary variable to stoe budget value

			#taking product inputs from user			 
			product_n = input("Enter product : ") 
			# input quantity of product 
			product_q = input("Enter quantity : ") 
			# input price of the product 
			product_p = float(input("Enter price: ")) 

      #checking the price of the product with budget
			if product_p > s: 

				#if price is greater than budget 
				print("\nCan't buy the product") 
				continue

			else: 
				#checks if product name is already in the list then 
				if product_n in name: 
					#then find the index of that product and store it in ind
					ind = name.index(product_n) 

					#remove quantity from "quantity" of the product which is repeated
					quantity.remove(quantity[ind]) 

					#remove price from "price" of the product which is repeated
					price.remove(price[ind]) 

					#insert new value given by user earlier 
					quantity.insert(ind, product_q) 

					# insert new value given by user earlier 
					price.insert(ind, product_p) 

					#Now subtracting the price from the budget and assign 
					#it to 's' sum(price) because price = [100, 200] if 
					#budget is 500 then s = budget-sum(price) = 200 
					#after updating prie for same product at index 0 let 
					#price = [200, 200] so, s = 100 

					s = budget-sum(price)  

					print("\nAmount left", s) 
				else: 
					#append value of  "name", "quantity", "price" 
					name.append(product_n) 

					# as name = b[0] it will append all the value in the 
					# list eg: "name":["rice"] 
					quantity.append(product_q) 

					#same for quantity and price 
					price.append(product_p)	 

					#after appending new value the sum in price 
					#as to be calculated 
					s = budget-sum(price) 

					print("\nAmount left", s) 

		#if budget goes zero print "no budget" 
		elif s<= 0: 
			print("\nNo budget") 
		else: 
			break

#print amount left in variable 's' 
print("\nAmount left : Rs.", s) 

#if the amount left equals to any amount in price list 
if s in price: 
	# then printing the name of the product which can buy 
	print("\nAmount left can buy you a", name[price.index(s)]) 

print("\n\n\nGROCERY LIST is") 

# print final grocery list 
for i in range(len(name)): 
	print(name[i], quantity[i], price[i]) 
  #print(items)